---

#
# see http://stackoverflow.com/questions/16444306/ansible-idempotent-mysql-installation-playbook

- name: Install MySQL python packages
  apt: name={{ item }} state=installed
  become: true
  with_items:
   - python-mysqldb
  tags:
    - automysqlbackup

# - name: Set fact for mysqldb mysqlbackup
#   shell: grep user /etc/mysql/debian.cnf | tail -n 1 | cut -d"=" -f2 | awk '{print $1}'
#   register: automysqlbackup_dump_user
#   when: automysqlbackup_dump_user is not defined
#   become: true
#   tags:
#     - automysqlbackup

# - name: Set fact for mysqldb mysqlbackup user pword
#   shell: grep password /etc/mysql/debian.cnf | tail -n 1 | cut -d"=" -f2 | awk '{print $1}'
#   register: automysqlbackup_dump_user_pword
#   when: automysqlbackup_dump_user_pword is not defined
#   become: true
#   tags:
#     - automysqlbackup

- name: Install from Package manager if requested
  include_tasks: packagemanager.yml
  when: automysqlbackup_src == 'package'
  tags:
    - automysqlbackup

- name: Install manually if requested
  include_tasks: manual.yml
  when: automysqlbackup_src == 'manual'
  tags:
    - automysqlbackup

# pass priv in as a variable to be idempotent
# see http://stackoverflow.com/questions/22958443/how-to-grant-mysql-server-administration-privileges-super-reload-with-ansi

- name: Create backup user in MySQL
  mysql_user:
    user: "{{ automysqlbackup_dump_user }}"
    password: "{{ automysqlbackup_dump_user_pword }}"
    state: present
    append_privs: yes
    priv: "{{ automysqlbackup_dump_user_privileges|join('/') }}"
    host: "{{ automysqlbackup_dump_host }}"
  become: true
  when: automysqlbackup_dump_user_pword is defined and automysqlbackup_dump_user is defined
  tags:
   - automysqlbackup


- name: Create Backups folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ automysqlbackup_user }}"
    group: "{{ automysqlbackup_group }}"
    mode: "2770"
    recurse: no
  with_items:
     - "{{ automysqlbackup_dir }}"
     - "{{ automysqlbackup_scripts_folder }}"
  become: true
  tags: [automysqlbackup]

- name:  Put up post and pre tasks and misc files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: yes
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items: "{{automysqlbackup_miscfiles}}"
  tags: [automysqlbackup]





